package test

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Code int32

const (
	Code_ServerErr                                         Code = 0 // 서버 에러
	Code_ServerErrStreamDisconnect                         Code = 1
	Code_DatabaseErr                                       Code = 100 // 데이터베이스 에러
	Code_StaticDataErrNotFoundAbyss                        Code = 200
	Code_StaticDataErrNotFoundAccountLevel                 Code = 201
	Code_StaticDataErrNotFoundAffectionCommonReward        Code = 202
	Code_StaticDataErrNotFoundAffectionGrowth              Code = 203
	Code_StaticDataErrNotFoundAsset                        Code = 204
	Code_StaticDataErrNotFoundBalance                      Code = 205
	Code_StaticDataErrNotFoundCharacter                    Code = 206
	Code_StaticDataErrNotFoundCharacterBaseStat            Code = 207
	Code_StaticDataErrNotFoundCharacterGetDialogue         Code = 208
	Code_StaticDataErrNotFoundCharacterGrowth              Code = 209
	Code_StaticDataErrNotFoundCharacterLevelStat           Code = 210
	Code_StaticDataErrNotFoundCharacterQuestList           Code = 211
	Code_StaticDataErrNotFoundCharacterQuestTrigger        Code = 212
	Code_StaticDataErrNotFoundCharacterQuestWeight         Code = 213
	Code_StaticDataErrNotFoundCharacterResource            Code = 214
	Code_StaticDataErrNotFoundCharacterSkill               Code = 215
	Code_StaticDataErrNotFoundCharacterTypeResource        Code = 216
	Code_StaticDataErrNotFoundCharacterSkillSet            Code = 217
	Code_StaticDataErrNotFoundCrafting                     Code = 218
	Code_StaticDataErrNotFoundCraftingResource             Code = 219
	Code_StaticDataErrNotFoundDialogue                     Code = 220
	Code_StaticDataErrNotFoundDrop                         Code = 221
	Code_StaticDataErrNotFoundDungeon                      Code = 222
	Code_StaticDataErrNotFoundEquipment                    Code = 223
	Code_StaticDataErrNotFoundEquipmentStat                Code = 224
	Code_StaticDataErrNotFoundEquipmentStatImpossible      Code = 225
	Code_StaticDataErrNotFoundEquipmentStatWeight          Code = 226
	Code_StaticDataErrNotFoundItem                         Code = 227
	Code_StaticDataErrNotFoundLocalization                 Code = 228
	Code_StaticDataErrNotFoundRecipe                       Code = 229
	Code_StaticDataErrNotFoundRequest                      Code = 230
	Code_StaticDataErrNotFoundResource                     Code = 231
	Code_StaticDataErrNotFoundSkillCarrier                 Code = 232
	Code_StaticDataErrNotFoundSkillEffectProperties        Code = 233
	Code_StaticDataErrNotFoundSkillEffects                 Code = 234
	Code_StaticDataErrNotFoundSkillElements                Code = 235
	Code_StaticDataErrNotFoundSkillPreset                  Code = 236
	Code_StaticDataErrNotFoundSkillRadius                  Code = 237
	Code_StaticDataErrNotFoundSkillRangeTable              Code = 238
	Code_StaticDataErrNotFoundSkillTargetTable             Code = 239
	Code_StaticDataErrNotFoundSkillTargetType              Code = 240
	Code_StaticDataErrNotFoundSkillTriggers                Code = 241
	Code_StaticDataErrNotFoundStargemGrowth                Code = 242
	Code_StaticDataErrNotFoundStargemResource              Code = 243
	Code_StaticDataErrNotFoundStart                        Code = 244
	Code_StaticDataErrNotFoundStory                        Code = 245
	Code_StaticDataErrNotFoundTile                         Code = 246
	Code_StaticDataErrNotFoundTileReward                   Code = 247
	Code_StaticDataErrNotFoundTutorialTrigger              Code = 248
	Code_StaticDataErrNotFoundWorldMapLocal                Code = 249
	Code_SessionErrInvalidSession                          Code = 300   // 세션 만료
	Code_SessionErrEmptySession                            Code = 301   // 세션 없음
	Code_SessionErrInvalidHeader                           Code = 302   // 헤더에 세션정보 없음
	Code_SessionErrEmptyAccountUser                        Code = 303   // 세션에 사용자정보 없음
	Code_AccountErrNotFoundAccount                         Code = 1000  // 계정 없음
	Code_AccountErrDuplicateNickname                       Code = 1001  // 중복 닉네임
	Code_AccountUserErrNotFoundAccountUser                 Code = 2000  // 계정 유저 없음
	Code_AbyssErrNotFoundAbyss                             Code = 3000  // 어비스 없음
	Code_AbyssTileErrNotFoundAbyssTile                     Code = 4000  // 어비스 타일 없음
	Code_AbyssTileErrNotFoundAbyssMapTile                  Code = 4001  // 어비스 맵 데이터에 타일정보 없음
	Code_AbyssTileErrExceedSaveCharacterCount              Code = 4002  // 어비스 타일 저장 가능한 캐릭터 수 초과
	Code_AbyssTileErrNotExpiredBattle                      Code = 4003  // 이미 전투중인 어비스 타일
	Code_AbyssTileErrAlreadyOccupied                       Code = 4004  // 이미 점령중인 어비스 타일
	Code_AbyssTileErrAlreadyClearedBattle                  Code = 4005  // 이미 종료된 전투 어비스 타일
	Code_AbyssTileErrNotInAttackRange                      Code = 4006  // 공격 할 수 없는 범위 타일
	Code_AbyssTileErrInvalidBattleTileType                 Code = 4007  // 전투 불가능 타일
	Code_AbyssTileErrInvalidClearedTime                    Code = 4008  // 유효하지 않은 클리어 시간
	Code_UserErrNotFoundUser                               Code = 5000  // 유저 없음
	Code_AssetErrNotFoundAsset                             Code = 6000  // 재화 없음
	Code_AssetErrNotEnoughAsset                            Code = 6001  // 재화 부족
	Code_CharacterErrNotFoundCharacter                     Code = 7000  // 캐릭터 없음
	Code_CharacterErrAlreadyActivity                       Code = 7001  // 이미 활동중인 캐릭터
	Code_CharacterErrNotEnoughStamina                      Code = 7002  // 캐릭터 스태미너 부족
	Code_CharacterCollectionErrNotFoundCharacterCollection Code = 8000  // 캐릭터 수집 없음
	Code_EquipmentErrNotFoundEquipment                     Code = 9000  // 장비 없음
	Code_EquipmentErrAlreadyEquip                          Code = 9001  // 이미 장착 중
	Code_EquipmentErrIncorrectCharacterEquipment           Code = 9002  // 잘못된 캐릭터 장비
	Code_EquipmentErrNotDismantleEquipState                Code = 9003  // 착용 장비 분해 불가능
	Code_EquipmentErrExceedEachDismantleLimitCount         Code = 9004  // 한번에 분해 가능한 장비수 초과
	Code_ItemErrNotFoundItem                               Code = 10000 // 아이템 없음
	Code_ItemErrNotEnoughItem                              Code = 10001 // 아이템 부족
	Code_DeckErrNotFoundDeck                               Code = 11000 // 덱 없음
	Code_DeckErrExceedCountLimit                           Code = 11001 // 덱 제한수 초과
	Code_CraftErrNotFoundCraft                             Code = 12000 // 제작 카드 없음
	Code_CraftErrNotFoundRecipe                            Code = 12001 // 제작 레시피 없음
	Code_CraftErrNotEnoughStamina                          Code = 12002 // 제작 피로도 부족
	Code_CraftErrNotEnoughMaterial                         Code = 12003 // 제작 재료 부족
	Code_CharacterQuestErrNotFoundCharacterQuest           Code = 13000 // 퀘스트 없음
	Code_CharacterQuestErrAlreadyAccepted                  Code = 13001 // 이미 수락된 캐릭터 퀘스트
	Code_CharacterQuestErrExceedCountLimit                 Code = 13002 // 퀘스트 횟수 초과
	Code_CharacterQuestErrExpiredQuest                     Code = 13003 // 종료된 캐릭터 퀘스트
	Code_AbyssTileDropErrNotFoundAbyssTileDrop             Code = 14000 // 보상 없음
)

// Enum value maps for Code.
var (
	Code_name = map[int32]string{
		0:     "ServerErr",
		1:     "ServerErrStreamDisconnect",
		100:   "DatabaseErr",
		200:   "StaticDataErrNotFoundAbyss",
		201:   "StaticDataErrNotFoundAccountLevel",
		202:   "StaticDataErrNotFoundAffectionCommonReward",
		203:   "StaticDataErrNotFoundAffectionGrowth",
		204:   "StaticDataErrNotFoundAsset",
		205:   "StaticDataErrNotFoundBalance",
		206:   "StaticDataErrNotFoundCharacter",
		207:   "StaticDataErrNotFoundCharacterBaseStat",
		208:   "StaticDataErrNotFoundCharacterGetDialogue",
		209:   "StaticDataErrNotFoundCharacterGrowth",
		210:   "StaticDataErrNotFoundCharacterLevelStat",
		211:   "StaticDataErrNotFoundCharacterQuestList",
		212:   "StaticDataErrNotFoundCharacterQuestTrigger",
		213:   "StaticDataErrNotFoundCharacterQuestWeight",
		214:   "StaticDataErrNotFoundCharacterResource",
		215:   "StaticDataErrNotFoundCharacterSkill",
		216:   "StaticDataErrNotFoundCharacterTypeResource",
		217:   "StaticDataErrNotFoundCharacterSkillSet",
		218:   "StaticDataErrNotFoundCrafting",
		219:   "StaticDataErrNotFoundCraftingResource",
		220:   "StaticDataErrNotFoundDialogue",
		221:   "StaticDataErrNotFoundDrop",
		222:   "StaticDataErrNotFoundDungeon",
		223:   "StaticDataErrNotFoundEquipment",
		224:   "StaticDataErrNotFoundEquipmentStat",
		225:   "StaticDataErrNotFoundEquipmentStatImpossible",
		226:   "StaticDataErrNotFoundEquipmentStatWeight",
		227:   "StaticDataErrNotFoundItem",
		228:   "StaticDataErrNotFoundLocalization",
		229:   "StaticDataErrNotFoundRecipe",
		230:   "StaticDataErrNotFoundRequest",
		231:   "StaticDataErrNotFoundResource",
		232:   "StaticDataErrNotFoundSkillCarrier",
		233:   "StaticDataErrNotFoundSkillEffectProperties",
		234:   "StaticDataErrNotFoundSkillEffects",
		235:   "StaticDataErrNotFoundSkillElements",
		236:   "StaticDataErrNotFoundSkillPreset",
		237:   "StaticDataErrNotFoundSkillRadius",
		238:   "StaticDataErrNotFoundSkillRangeTable",
		239:   "StaticDataErrNotFoundSkillTargetTable",
		240:   "StaticDataErrNotFoundSkillTargetType",
		241:   "StaticDataErrNotFoundSkillTriggers",
		242:   "StaticDataErrNotFoundStargemGrowth",
		243:   "StaticDataErrNotFoundStargemResource",
		244:   "StaticDataErrNotFoundStart",
		245:   "StaticDataErrNotFoundStory",
		246:   "StaticDataErrNotFoundTile",
		247:   "StaticDataErrNotFoundTileReward",
		248:   "StaticDataErrNotFoundTutorialTrigger",
		249:   "StaticDataErrNotFoundWorldMapLocal",
		300:   "SessionErrInvalidSession",
		301:   "SessionErrEmptySession",
		302:   "SessionErrInvalidHeader",
		303:   "SessionErrEmptyAccountUser",
		1000:  "AccountErrNotFoundAccount",
		1001:  "AccountErrDuplicateNickname",
		2000:  "AccountUserErrNotFoundAccountUser",
		3000:  "AbyssErrNotFoundAbyss",
		4000:  "AbyssTileErrNotFoundAbyssTile",
		4001:  "AbyssTileErrNotFoundAbyssMapTile",
		4002:  "AbyssTileErrExceedSaveCharacterCount",
		4003:  "AbyssTileErrNotExpiredBattle",
		4004:  "AbyssTileErrAlreadyOccupied",
		4005:  "AbyssTileErrAlreadyClearedBattle",
		4006:  "AbyssTileErrNotInAttackRange",
		4007:  "AbyssTileErrInvalidBattleTileType",
		4008:  "AbyssTileErrInvalidClearedTime",
		5000:  "UserErrNotFoundUser",
		6000:  "AssetErrNotFoundAsset",
		6001:  "AssetErrNotEnoughAsset",
		7000:  "CharacterErrNotFoundCharacter",
		7001:  "CharacterErrAlreadyActivity",
		7002:  "CharacterErrNotEnoughStamina",
		8000:  "CharacterCollectionErrNotFoundCharacterCollection",
		9000:  "EquipmentErrNotFoundEquipment",
		9001:  "EquipmentErrAlreadyEquip",
		9002:  "EquipmentErrIncorrectCharacterEquipment",
		9003:  "EquipmentErrNotDismantleEquipState",
		9004:  "EquipmentErrExceedEachDismantleLimitCount",
		10000: "ItemErrNotFoundItem",
		10001: "ItemErrNotEnoughItem",
		11000: "DeckErrNotFoundDeck",
		11001: "DeckErrExceedCountLimit",
		12000: "CraftErrNotFoundCraft",
		12001: "CraftErrNotFoundRecipe",
		12002: "CraftErrNotEnoughStamina",
		12003: "CraftErrNotEnoughMaterial",
		13000: "CharacterQuestErrNotFoundCharacterQuest",
		13001: "CharacterQuestErrAlreadyAccepted",
		13002: "CharacterQuestErrExceedCountLimit",
		13003: "CharacterQuestErrExpiredQuest",
		14000: "AbyssTileDropErrNotFoundAbyssTileDrop",
	}
	Code_value = map[string]int32{
		"ServerErr":                                         0,
		"ServerErrStreamDisconnect":                         1,
		"DatabaseErr":                                       100,
		"StaticDataErrNotFoundAbyss":                        200,
		"StaticDataErrNotFoundAccountLevel":                 201,
		"StaticDataErrNotFoundAffectionCommonReward":        202,
		"StaticDataErrNotFoundAffectionGrowth":              203,
		"StaticDataErrNotFoundAsset":                        204,
		"StaticDataErrNotFoundBalance":                      205,
		"StaticDataErrNotFoundCharacter":                    206,
		"StaticDataErrNotFoundCharacterBaseStat":            207,
		"StaticDataErrNotFoundCharacterGetDialogue":         208,
		"StaticDataErrNotFoundCharacterGrowth":              209,
		"StaticDataErrNotFoundCharacterLevelStat":           210,
		"StaticDataErrNotFoundCharacterQuestList":           211,
		"StaticDataErrNotFoundCharacterQuestTrigger":        212,
		"StaticDataErrNotFoundCharacterQuestWeight":         213,
		"StaticDataErrNotFoundCharacterResource":            214,
		"StaticDataErrNotFoundCharacterSkill":               215,
		"StaticDataErrNotFoundCharacterTypeResource":        216,
		"StaticDataErrNotFoundCharacterSkillSet":            217,
		"StaticDataErrNotFoundCrafting":                     218,
		"StaticDataErrNotFoundCraftingResource":             219,
		"StaticDataErrNotFoundDialogue":                     220,
		"StaticDataErrNotFoundDrop":                         221,
		"StaticDataErrNotFoundDungeon":                      222,
		"StaticDataErrNotFoundEquipment":                    223,
		"StaticDataErrNotFoundEquipmentStat":                224,
		"StaticDataErrNotFoundEquipmentStatImpossible":      225,
		"StaticDataErrNotFoundEquipmentStatWeight":          226,
		"StaticDataErrNotFoundItem":                         227,
		"StaticDataErrNotFoundLocalization":                 228,
		"StaticDataErrNotFoundRecipe":                       229,
		"StaticDataErrNotFoundRequest":                      230,
		"StaticDataErrNotFoundResource":                     231,
		"StaticDataErrNotFoundSkillCarrier":                 232,
		"StaticDataErrNotFoundSkillEffectProperties":        233,
		"StaticDataErrNotFoundSkillEffects":                 234,
		"StaticDataErrNotFoundSkillElements":                235,
		"StaticDataErrNotFoundSkillPreset":                  236,
		"StaticDataErrNotFoundSkillRadius":                  237,
		"StaticDataErrNotFoundSkillRangeTable":              238,
		"StaticDataErrNotFoundSkillTargetTable":             239,
		"StaticDataErrNotFoundSkillTargetType":              240,
		"StaticDataErrNotFoundSkillTriggers":                241,
		"StaticDataErrNotFoundStargemGrowth":                242,
		"StaticDataErrNotFoundStargemResource":              243,
		"StaticDataErrNotFoundStart":                        244,
		"StaticDataErrNotFoundStory":                        245,
		"StaticDataErrNotFoundTile":                         246,
		"StaticDataErrNotFoundTileReward":                   247,
		"StaticDataErrNotFoundTutorialTrigger":              248,
		"StaticDataErrNotFoundWorldMapLocal":                249,
		"SessionErrInvalidSession":                          300,
		"SessionErrEmptySession":                            301,
		"SessionErrInvalidHeader":                           302,
		"SessionErrEmptyAccountUser":                        303,
		"AccountErrNotFoundAccount":                         1000,
		"AccountErrDuplicateNickname":                       1001,
		"AccountUserErrNotFoundAccountUser":                 2000,
		"AbyssErrNotFoundAbyss":                             3000,
		"AbyssTileErrNotFoundAbyssTile":                     4000,
		"AbyssTileErrNotFoundAbyssMapTile":                  4001,
		"AbyssTileErrExceedSaveCharacterCount":              4002,
		"AbyssTileErrNotExpiredBattle":                      4003,
		"AbyssTileErrAlreadyOccupied":                       4004,
		"AbyssTileErrAlreadyClearedBattle":                  4005,
		"AbyssTileErrNotInAttackRange":                      4006,
		"AbyssTileErrInvalidBattleTileType":                 4007,
		"AbyssTileErrInvalidClearedTime":                    4008,
		"UserErrNotFoundUser":                               5000,
		"AssetErrNotFoundAsset":                             6000,
		"AssetErrNotEnoughAsset":                            6001,
		"CharacterErrNotFoundCharacter":                     7000,
		"CharacterErrAlreadyActivity":                       7001,
		"CharacterErrNotEnoughStamina":                      7002,
		"CharacterCollectionErrNotFoundCharacterCollection": 8000,
		"EquipmentErrNotFoundEquipment":                     9000,
		"EquipmentErrAlreadyEquip":                          9001,
		"EquipmentErrIncorrectCharacterEquipment":           9002,
		"EquipmentErrNotDismantleEquipState":                9003,
		"EquipmentErrExceedEachDismantleLimitCount":         9004,
		"ItemErrNotFoundItem":                               10000,
		"ItemErrNotEnoughItem":                              10001,
		"DeckErrNotFoundDeck":                               11000,
		"DeckErrExceedCountLimit":                           11001,
		"CraftErrNotFoundCraft":                             12000,
		"CraftErrNotFoundRecipe":                            12001,
		"CraftErrNotEnoughStamina":                          12002,
		"CraftErrNotEnoughMaterial":                         12003,
		"CharacterQuestErrNotFoundCharacterQuest":           13000,
		"CharacterQuestErrAlreadyAccepted":                  13001,
		"CharacterQuestErrExceedCountLimit":                 13002,
		"CharacterQuestErrExpiredQuest":                     13003,
		"AbyssTileDropErrNotFoundAbyssTileDrop":             14000,
	}
)

func (x Code) Enum() *Code {
	p := new(Code)
	*p = x
	return p
}

func (x Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Code) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_error_res_error_res_proto_enumTypes[0].Descriptor()
}

func (Code) Type() protoreflect.EnumType {
	return &file_protos_error_res_error_res_proto_enumTypes[0]
}

func (x Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Code.Descriptor instead.
func (Code) EnumDescriptor() ([]byte, []int) {
	return file_protos_error_res_error_res_proto_rawDescGZIP(), []int{0}
}

var File_protos_error_res_error_res_proto protoreflect.FileDescriptor

var file_protos_error_res_error_res_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72,
	0x65, 0x73, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x2a, 0xfb, 0x1b,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x45, 0x72, 0x72, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45,
	0x72, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x45, 0x72, 0x72, 0x10, 0x64, 0x12, 0x1f, 0x0a, 0x1a, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x62,
	0x79, 0x73, 0x73, 0x10, 0xc8, 0x01, 0x12, 0x26, 0x0a, 0x21, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x10, 0xc9, 0x01, 0x12, 0x2f,
	0x0a, 0x2a, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e,
	0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x10, 0xca, 0x01, 0x12,
	0x29, 0x0a, 0x24, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72,
	0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x10, 0xcb, 0x01, 0x12, 0x1f, 0x0a, 0x1a, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f,
	0x75, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x10, 0xcc, 0x01, 0x12, 0x21, 0x0a, 0x1c, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x10, 0xcd, 0x01, 0x12, 0x23,
	0x0a, 0x1e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e,
	0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x10, 0xce, 0x01, 0x12, 0x2b, 0x0a, 0x26, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x10, 0xcf, 0x01,
	0x12, 0x2e, 0x0a, 0x29, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72,
	0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x10, 0xd0, 0x01,
	0x12, 0x29, 0x0a, 0x24, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72,
	0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x10, 0xd1, 0x01, 0x12, 0x2c, 0x0a, 0x27, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x10, 0xd2, 0x01, 0x12, 0x2c, 0x0a, 0x27, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x10, 0xd3, 0x01, 0x12, 0x2f, 0x0a, 0x2a, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x10, 0xd4, 0x01, 0x12, 0x2e, 0x0a, 0x29, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x57,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x10, 0xd5, 0x01, 0x12, 0x2b, 0x0a, 0x26, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x10, 0xd6, 0x01, 0x12, 0x28, 0x0a, 0x23, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x10, 0xd7, 0x01, 0x12,
	0x2f, 0x0a, 0x2a, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72,
	0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x10, 0xd8, 0x01,
	0x12, 0x2b, 0x0a, 0x26, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72,
	0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x53, 0x65, 0x74, 0x10, 0xd9, 0x01, 0x12, 0x22, 0x0a,
	0x1d, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f,
	0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x72, 0x61, 0x66, 0x74, 0x69, 0x6e, 0x67, 0x10, 0xda,
	0x01, 0x12, 0x2a, 0x0a, 0x25, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x72, 0x61, 0x66, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x10, 0xdb, 0x01, 0x12, 0x22, 0x0a,
	0x1d, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f,
	0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x10, 0xdc,
	0x01, 0x12, 0x1e, 0x0a, 0x19, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x72, 0x6f, 0x70, 0x10, 0xdd,
	0x01, 0x12, 0x21, 0x0a, 0x1c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x75, 0x6e, 0x67, 0x65, 0x6f,
	0x6e, 0x10, 0xde, 0x01, 0x12, 0x23, 0x0a, 0x1e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0xdf, 0x01, 0x12, 0x27, 0x0a, 0x22, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x10,
	0xe0, 0x01, 0x12, 0x31, 0x0a, 0x2c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x71, 0x75, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x49, 0x6d, 0x70, 0x6f, 0x73, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x10, 0xe1, 0x01, 0x12, 0x2d, 0x0a, 0x28, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x10, 0xe2, 0x01, 0x12, 0x1e, 0x0a, 0x19, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x10, 0xe3, 0x01, 0x12, 0x26, 0x0a, 0x21, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xe4, 0x01, 0x12, 0x20, 0x0a, 0x1b,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x10, 0xe5, 0x01, 0x12, 0x21,
	0x0a, 0x1c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e,
	0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0xe6,
	0x01, 0x12, 0x22, 0x0a, 0x1d, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x10, 0xe7, 0x01, 0x12, 0x26, 0x0a, 0x21, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x10, 0xe8, 0x01, 0x12, 0x2f, 0x0a,
	0x2a, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f,
	0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x10, 0xe9, 0x01, 0x12, 0x26,
	0x0a, 0x21, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e,
	0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x73, 0x10, 0xea, 0x01, 0x12, 0x27, 0x0a, 0x22, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x53,
	0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x10, 0xeb, 0x01, 0x12,
	0x25, 0x0a, 0x20, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72,
	0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x10, 0xec, 0x01, 0x12, 0x25, 0x0a, 0x20, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x53,
	0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x10, 0xed, 0x01, 0x12, 0x29, 0x0a,
	0x24, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f,
	0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x10, 0xee, 0x01, 0x12, 0x2a, 0x0a, 0x25, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x10, 0xef, 0x01, 0x12, 0x29, 0x0a, 0x24, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x10, 0xf0, 0x01, 0x12,
	0x27, 0x0a, 0x22, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72,
	0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x73, 0x10, 0xf1, 0x01, 0x12, 0x27, 0x0a, 0x22, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x72, 0x67, 0x65, 0x6d, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x10, 0xf2,
	0x01, 0x12, 0x29, 0x0a, 0x24, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x10, 0xf3, 0x01, 0x12, 0x1f, 0x0a, 0x1a,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x10, 0xf4, 0x01, 0x12, 0x1f, 0x0a,
	0x1a, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f,
	0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x10, 0xf5, 0x01, 0x12, 0x1e,
	0x0a, 0x19, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e,
	0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x10, 0xf6, 0x01, 0x12, 0x24,
	0x0a, 0x1f, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4e,
	0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x10, 0xf7, 0x01, 0x12, 0x29, 0x0a, 0x24, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x75, 0x74,
	0x6f, 0x72, 0x69, 0x61, 0x6c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x10, 0xf8, 0x01, 0x12,
	0x27, 0x0a, 0x22, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72,
	0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4d, 0x61, 0x70,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x10, 0xf9, 0x01, 0x12, 0x1d, 0x0a, 0x18, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x10, 0xac, 0x02, 0x12, 0x1b, 0x0a, 0x16, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x45, 0x72, 0x72, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x10, 0xad, 0x02, 0x12, 0x1c, 0x0a, 0x17, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45,
	0x72, 0x72, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x10,
	0xae, 0x02, 0x12, 0x1f, 0x0a, 0x1a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x10, 0xaf, 0x02, 0x12, 0x1e, 0x0a, 0x19, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x72,
	0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x10, 0xe8, 0x07, 0x12, 0x20, 0x0a, 0x1b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x72,
	0x72, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x10, 0xe9, 0x07, 0x12, 0x26, 0x0a, 0x21, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x10, 0xd0, 0x0f, 0x12, 0x1a, 0x0a,
	0x15, 0x41, 0x62, 0x79, 0x73, 0x73, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x41, 0x62, 0x79, 0x73, 0x73, 0x10, 0xb8, 0x17, 0x12, 0x22, 0x0a, 0x1d, 0x41, 0x62, 0x79,
	0x73, 0x73, 0x54, 0x69, 0x6c, 0x65, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x41, 0x62, 0x79, 0x73, 0x73, 0x54, 0x69, 0x6c, 0x65, 0x10, 0xa0, 0x1f, 0x12, 0x25, 0x0a,
	0x20, 0x41, 0x62, 0x79, 0x73, 0x73, 0x54, 0x69, 0x6c, 0x65, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x62, 0x79, 0x73, 0x73, 0x4d, 0x61, 0x70, 0x54, 0x69, 0x6c,
	0x65, 0x10, 0xa1, 0x1f, 0x12, 0x29, 0x0a, 0x24, 0x41, 0x62, 0x79, 0x73, 0x73, 0x54, 0x69, 0x6c,
	0x65, 0x45, 0x72, 0x72, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x53, 0x61, 0x76, 0x65, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0xa2, 0x1f, 0x12,
	0x21, 0x0a, 0x1c, 0x41, 0x62, 0x79, 0x73, 0x73, 0x54, 0x69, 0x6c, 0x65, 0x45, 0x72, 0x72, 0x4e,
	0x6f, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x10,
	0xa3, 0x1f, 0x12, 0x20, 0x0a, 0x1b, 0x41, 0x62, 0x79, 0x73, 0x73, 0x54, 0x69, 0x6c, 0x65, 0x45,
	0x72, 0x72, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x69, 0x65,
	0x64, 0x10, 0xa4, 0x1f, 0x12, 0x25, 0x0a, 0x20, 0x41, 0x62, 0x79, 0x73, 0x73, 0x54, 0x69, 0x6c,
	0x65, 0x45, 0x72, 0x72, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x65, 0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x10, 0xa5, 0x1f, 0x12, 0x21, 0x0a, 0x1c, 0x41,
	0x62, 0x79, 0x73, 0x73, 0x54, 0x69, 0x6c, 0x65, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x49, 0x6e,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x10, 0xa6, 0x1f, 0x12, 0x26,
	0x0a, 0x21, 0x41, 0x62, 0x79, 0x73, 0x73, 0x54, 0x69, 0x6c, 0x65, 0x45, 0x72, 0x72, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x69, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x10, 0xa7, 0x1f, 0x12, 0x23, 0x0a, 0x1e, 0x41, 0x62, 0x79, 0x73, 0x73, 0x54,
	0x69, 0x6c, 0x65, 0x45, 0x72, 0x72, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x10, 0xa8, 0x1f, 0x12, 0x18, 0x0a, 0x13, 0x55,
	0x73, 0x65, 0x72, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x10, 0x88, 0x27, 0x12, 0x1a, 0x0a, 0x15, 0x41, 0x73, 0x73, 0x65, 0x74, 0x45, 0x72,
	0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x10, 0xf0,
	0x2e, 0x12, 0x1b, 0x0a, 0x16, 0x41, 0x73, 0x73, 0x65, 0x74, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74,
	0x45, 0x6e, 0x6f, 0x75, 0x67, 0x68, 0x41, 0x73, 0x73, 0x65, 0x74, 0x10, 0xf1, 0x2e, 0x12, 0x22,
	0x0a, 0x1d, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x4e, 0x6f,
	0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x10,
	0xd8, 0x36, 0x12, 0x20, 0x0a, 0x1b, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x45,
	0x72, 0x72, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x10, 0xd9, 0x36, 0x12, 0x21, 0x0a, 0x1c, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x45, 0x6e, 0x6f, 0x75, 0x67, 0x68, 0x53, 0x74, 0x61,
	0x6d, 0x69, 0x6e, 0x61, 0x10, 0xda, 0x36, 0x12, 0x36, 0x0a, 0x31, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72,
	0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xc0, 0x3e, 0x12,
	0x22, 0x0a, 0x1d, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x72, 0x72, 0x4e,
	0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x10, 0xa8, 0x46, 0x12, 0x1d, 0x0a, 0x18, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x45, 0x72, 0x72, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x45, 0x71, 0x75, 0x69, 0x70, 0x10,
	0xa9, 0x46, 0x12, 0x2c, 0x0a, 0x27, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x45,
	0x72, 0x72, 0x49, 0x6e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0xaa, 0x46,
	0x12, 0x27, 0x0a, 0x22, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x72, 0x72,
	0x4e, 0x6f, 0x74, 0x44, 0x69, 0x73, 0x6d, 0x61, 0x6e, 0x74, 0x6c, 0x65, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x10, 0xab, 0x46, 0x12, 0x2e, 0x0a, 0x29, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x72, 0x72, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x45,
	0x61, 0x63, 0x68, 0x44, 0x69, 0x73, 0x6d, 0x61, 0x6e, 0x74, 0x6c, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0xac, 0x46, 0x12, 0x18, 0x0a, 0x13, 0x49, 0x74, 0x65,
	0x6d, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x10, 0x90, 0x4e, 0x12, 0x19, 0x0a, 0x14, 0x49, 0x74, 0x65, 0x6d, 0x45, 0x72, 0x72, 0x4e, 0x6f,
	0x74, 0x45, 0x6e, 0x6f, 0x75, 0x67, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x10, 0x91, 0x4e, 0x12, 0x18,
	0x0a, 0x13, 0x44, 0x65, 0x63, 0x6b, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x44, 0x65, 0x63, 0x6b, 0x10, 0xf8, 0x55, 0x12, 0x1c, 0x0a, 0x17, 0x44, 0x65, 0x63, 0x6b,
	0x45, 0x72, 0x72, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x10, 0xf9, 0x55, 0x12, 0x1a, 0x0a, 0x15, 0x43, 0x72, 0x61, 0x66, 0x74, 0x45,
	0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x72, 0x61, 0x66, 0x74, 0x10,
	0xe0, 0x5d, 0x12, 0x1b, 0x0a, 0x16, 0x43, 0x72, 0x61, 0x66, 0x74, 0x45, 0x72, 0x72, 0x4e, 0x6f,
	0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x10, 0xe1, 0x5d, 0x12,
	0x1d, 0x0a, 0x18, 0x43, 0x72, 0x61, 0x66, 0x74, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x45, 0x6e,
	0x6f, 0x75, 0x67, 0x68, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x10, 0xe2, 0x5d, 0x12, 0x1e,
	0x0a, 0x19, 0x43, 0x72, 0x61, 0x66, 0x74, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x45, 0x6e, 0x6f,
	0x75, 0x67, 0x68, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x10, 0xe3, 0x5d, 0x12, 0x2c,
	0x0a, 0x27, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x10, 0xc8, 0x65, 0x12, 0x25, 0x0a, 0x20,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x45, 0x72,
	0x72, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64,
	0x10, 0xc9, 0x65, 0x12, 0x26, 0x0a, 0x21, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x10, 0xca, 0x65, 0x12, 0x22, 0x0a, 0x1d, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x51, 0x75, 0x65, 0x73, 0x74, 0x10, 0xcb, 0x65, 0x12,
	0x2a, 0x0a, 0x25, 0x41, 0x62, 0x79, 0x73, 0x73, 0x54, 0x69, 0x6c, 0x65, 0x44, 0x72, 0x6f, 0x70,
	0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x62, 0x79, 0x73, 0x73,
	0x54, 0x69, 0x6c, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x10, 0xb0, 0x6d, 0x42, 0x4e, 0x5a, 0x40, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x75, 0x61, 0x73, 0x61, 0x72,
	0x67, 0x61, 0x6d, 0x65, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x73, 0xaa,
	0x02, 0x09, 0x47, 0x72, 0x70, 0x63, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_protos_error_res_error_res_proto_rawDescOnce sync.Once
	file_protos_error_res_error_res_proto_rawDescData = file_protos_error_res_error_res_proto_rawDesc
)

func file_protos_error_res_error_res_proto_rawDescGZIP() []byte {
	file_protos_error_res_error_res_proto_rawDescOnce.Do(func() {
		file_protos_error_res_error_res_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_error_res_error_res_proto_rawDescData)
	})
	return file_protos_error_res_error_res_proto_rawDescData
}

var file_protos_error_res_error_res_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protos_error_res_error_res_proto_goTypes = []interface{}{
	(Code)(0), // 0: error_res.Code
}
var file_protos_error_res_error_res_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protos_error_res_error_res_proto_init() }
func file_protos_error_res_error_res_proto_init() {
	if File_protos_error_res_error_res_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_error_res_error_res_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_error_res_error_res_proto_goTypes,
		DependencyIndexes: file_protos_error_res_error_res_proto_depIdxs,
		EnumInfos:         file_protos_error_res_error_res_proto_enumTypes,
	}.Build()
	File_protos_error_res_error_res_proto = out.File
	file_protos_error_res_error_res_proto_rawDesc = nil
	file_protos_error_res_error_res_proto_goTypes = nil
	file_protos_error_res_error_res_proto_depIdxs = nil
}
